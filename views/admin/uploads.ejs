<!DOCTYPE html>
<!-- Coding By CodingNepal - youtube.com/codingnepal -->
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Upload Admin</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <style>
        /* Import Google font - Poppins */
        /* @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap'); */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "Poppins", sans-serif;
        }

        body {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            background: #6990F2;
        }

        ::selection {
            color: #fff;
            background: #6990F2;
        }

        .wrapper {
            width: 430px;
            background: #fff;
            border-radius: 5px;
            padding: 30px;
            box-shadow: 7px 7px 12px rgba(0, 0, 0, 0.05);
        }

        .wrapper header {
            color: #6990F2;
            font-size: 27px;
            font-weight: 600;
            text-align: center;
        }

        .wrapper form {
            height: 167px;
            display: flex;
            cursor: pointer;
            margin: 30px 0;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            border-radius: 5px;
            border: 2px dashed #6990F2;
        }

        form :where(i, p) {
            color: #6990F2;
        }

        form i {
            font-size: 50px;
        }

        form p {
            margin-top: 15px;
            font-size: 16px;
        }

        section .row {
            margin-bottom: 10px;
            background: #E9F0FF;
            list-style: none;
            padding: 15px 20px;
            border-radius: 5px;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        section .row i {
            color: #6990F2;
            font-size: 30px;
        }

        section .details span {
            font-size: 14px;
        }

        .progress-area .row .content {
            width: 100%;
            margin-left: 15px;
        }

        .progress-area .details {
            display: flex;
            align-items: center;
            margin-bottom: 7px;
            justify-content: space-between;
        }

        .progress-area .content .progress-bar {
            height: 6px;
            width: 100%;
            margin-bottom: 4px;
            background: #fff;
            border-radius: 30px;
        }

        .content .progress-bar .progress {
            height: 100%;
            width: 0%;
            background: #6990F2;
            border-radius: inherit;
        }

        .uploaded-area {
            max-height: 232px;
            overflow-y: scroll;
        }

        .uploaded-area.onprogress {
            max-height: 150px;
        }

        .uploaded-area::-webkit-scrollbar {
            width: 0px;
        }

        .uploaded-area .row .content {
            display: flex;
            align-items: center;
        }

        .highlight {
            border: 2px dashed #6990F2 !important;
        }

        .uploaded-area .row .details {
            display: flex;
            margin-left: 15px;
            flex-direction: column;
        }

        .uploaded-area .row .details .size {
            color: #404040;
            font-size: 11px;
        }

        .uploaded-area i.fa-check {
            font-size: 16px;
        }
    </style>
</head>

<body>
    <div class="wrapper">
        <header>Upload excel Timetable</header>
        <form action="#">
            <input class="file-input" id="file-upload" accept=".xlsx,.xls" type="file" name="file" hidden>
            <i class="fas fa-cloud-upload-alt"></i>
            <p>Browse File to Upload</p>
            <input type="hidden" name="semester" id="semester">
            <input type="hidden" name="year" id="year">
        </form>
        <section class="progress-area"></section>
        <section class="uploaded-area"></section>
    </div>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        const form = document.querySelector("form"),
            fileInput = document.querySelector(".file-input"),
            progressArea = document.querySelector(".progress-area"),
            uploadedArea = document.querySelector(".uploaded-area");

        form.addEventListener("click", () => {
            fileInput.click();
        });

        let uploadedHTML = "";
        JSON.parse('<%- JSON.stringify(files) %>').forEach((semester) => {
            uploadedHTML += `<h3>${semester.folder} (${semester.year})</h3>`;
            if (semester.files.length > 0) {
                semester.files.forEach((fila) => {
                    uploadedHTML +=
                        `<li class="row">
                                                  <div class="content upload">
                                                              <i class="fas fa-file-alt"></i>
                                                     <div class="details">
                                                        <span class="name">${fila.name} Completed</span>
                                                        <span class="size">${fila.size}</span>
                                                    </div>
                                                 </div>
                                                    <i class="fas fa-check"></i>
                                                </li>`;
                })
            }
        })
        uploadedArea.innerHTML = uploadedHTML;

        'drag dragstart dragend dragover dragenter dragleave drop'.split(" ").forEach((event) => {
            form.addEventListener(event, (e) => {
                e.preventDefault();
                e.stopPropagation();

            }, false)
        })

        form.addEventListener('drop', (e) => {
            let dt = e.dataTransfer
            let files = dt.files
            fileInput.files = files
            const changeEvent = new Event('change');

            // Dispatch the change event for the input element
            fileInput.dispatchEvent(changeEvent);

        }, false)

        fileInput.onchange = ({
            target
        }) => {

            let file = target.files[0];
            if (file) {
                let fileName = file.name;
                if (fileName.length >= 12) {
                    let splitName = fileName.split('.');
                    fileName = splitName[0].substring(0, 13) + "... ." + splitName[1];
                }
                uploadFile(fileName);
            }
        }

        async function uploadFile(name) {

            const {
                value: semester
            } = await Swal.fire({
                title: 'Select field validation',
                input: 'select',
                inputOptions: {
                    JANUARY: 'JANUARY SEMESTER',
                    MAY: 'MAY SEMESTER',
                    AUGUST: 'AUGUST SEMESTER'
                },
                inputPlaceholder: 'Select a semester',
                showCancelButton: true,
                inputValidator: (value) => {
                    return new Promise((resolve) => {
                        if (value) {
                            resolve()
                        } else {
                            resolve('You need to select a semester')
                        }
                    })
                }
            })

            if (semester) {
                document.querySelector('#semester').value = semester;
                Swal.fire({
                    title: 'Uploading the file',
                    text: `Are you sure you want to upload ${name}`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, Upload it',
                    cancelButtonText: 'No, Cancel'
                }).then((result) => {
                    if (result.value) {
                        let xhr = new XMLHttpRequest();
                        xhr.open("POST", "/upload");
                        xhr.upload.addEventListener("progress", ({
                            loaded,
                            total
                        }) => {
                            let fileLoaded = Math.floor((loaded / total) * 100);
                            let fileTotal = Math.floor(total / 1000);
                            let fileSize;
                            (fileTotal < 1024) ? fileSize = fileTotal + " KB": fileSize = (loaded /
                                (1024 *
                                    1024)).toFixed(
                                2) + " MB";
                            let progressHTML = `<li class="row">
                              <i class="fas fa-file-alt"></i>
                              <div class="content">
                                <div class="details">
                                  <span class="name">${name} â€¢ Uploading</span>
                                  <span class="percent">${fileLoaded}%</span>
                                </div>
                                <div class="progress-bar">
                                  <div class="progress" style="width: ${fileLoaded}%"></div>
                                </div>
                              </div>
                            </li>`;
                            uploadedArea.classList.add("onprogress");
                            progressArea.innerHTML = progressHTML;
                            if (loaded == total) {
                                progressArea.innerHTML = "";
                                let uploadedHTML = `<li class="row">
                                <div class="content upload">
                                  <i class="fas fa-file-alt"></i>
                                  <div class="details">
                                    <span class="name">${name} â€¢ Uploaded</span>
                                    <span class="size">${fileSize}</span>
                                  </div>
                                </div>
                                <i class="fas fa-check"></i>
                              </li>`;
                                uploadedArea.classList.remove("onprogress");
                                uploadedArea.insertAdjacentHTML("afterbegin", uploadedHTML);
                            }
                        });

                        let data = new FormData(form);
                        xhr.send(data);
                        xhr.onreadystatechange = () => { // Call a function when the state changes.
                            if (xhr.readyState === XMLHttpRequest.DONE) {
                                if (xhr.status == 200) {
                                    console.log(JSON.parse(xhr.response).files);
                                    let uploadedHTML = "";
                                    JSON.parse(xhr.response).files.forEach((semester) => {
                                        uploadedHTML += `<h3>${semester.folder}</h3>`;
                                        if (semester.files.length > 0) {
                                            semester.files.forEach((fila) => {
                                                uploadedHTML +=
                                                    `<li class="row">
                                                      <div class="content upload">
                                                                  <i class="fas fa-file-alt"></i>
                                                         <div class="details">
                                                            <span class="name">${fila.name} Completed</span>
                                                            <span class="size">${fila.size}</span>
                                                        </div>
                                                     </div>
                                                        <i class="fas fa-check"></i>
                                                    </li>`;
                                            })
                                        }
                                    })
                                    uploadedArea.innerHTML = uploadedHTML;
                                } else {
                                    console.log(xhr.response)
                                }
                            }
                        }

                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        // The user clicked the "Cancel" button
                        // Do nothing
                    }
                });
            }

        }
    </script>

</body>

</html>